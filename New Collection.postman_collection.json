{
	"info": {
		"_postman_id": "740f2b16-74c8-4816-968a-eec2ce8f4640",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21209530"
	},
	"item": [
		{
			"name": "Authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var ObjNum=pm.response.json().length\r",
							"var randN = Math.floor(Math.random()*ObjNum)\r",
							"\r",
							"pm.environment.set(\"idBook\",pm.response.json()[randN].idBook)\r",
							"pm.environment.set(\"id\",pm.response.json()[randN].id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/Authors",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					],
					"query": [
						{
							"key": "\n",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"for(let randN=0;randN<3;randN++){\r",
							"pm.test(\"ID Book is relative\",function(){\r",
							"    pm.expect(pm.response.json()[randN].idBook).to.equal(pm.environment.get(\"idBook\"))\r",
							"});\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/Authors/authors/books/{{idBook}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"authors",
						"books",
						"{{idBook}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authors ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Author's Data updates successfully\",function(){\r",
							"    pm.expect(pm.response.json().firstName).to.equal(pm.environment.get(\"fName\"))\r",
							"    pm.expect(pm.response.json().lastName).to.equal(pm.environment.get(\"lName\"))\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{id}},\r\n  \"idBook\": 0,\r\n  \"firstName\":\"{{fName}}\",\r\n  \"lastName\": \"{{lName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Author by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Author's Data affecting\",function(){\r",
							"    pm.expect(pm.response.json().firstName).to.equal(pm.environment.get(\"fName\"))\r",
							"    pm.expect(pm.response.json().lastName).to.equal(pm.environment.get(\"lName\"))\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/Authors/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"{{id}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Authors Case 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response should be 201 Created\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"idBook\": 0,\r\n  \"firstName\":\"String\",\r\n  \"lastName\": \"String\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					],
					"query": [
						{
							"key": "\n",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Authors Case 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"idBook\": 0\r\n\r\n}\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					],
					"query": [
						{
							"key": "\n",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}